{"ast":null,"code":"var _jsxFileName = \"/home/llop10101/Escriptori/Pastorets/Programes/prova-react/prova-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\nimport loginService from './services/login';\nimport LoginForm from './components/LoginForm.js';\nimport NoteForm from './components/NoteForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n  const handleLogout = () => {\n    setUser(null);\n    noteService.setToken(null);\n    window.localStorage.removeItem('loggedNoteAppUser');\n  };\n  const addNote = noteObject => {\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n    });\n  };\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    });\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedNoteAppUser', JSON.stringify(user));\n      noteService.setToken(user.token);\n      setUser(user);\n      setUsername('');\n      setPassword('');\n    } catch (e) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(NoteForm, {\n      addNote: addNote,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      password: password,\n      handleUsernameChange: _ref => {\n        let {\n          target\n        } = _ref;\n        return setUsername(target.value);\n      },\n      handlePasswordChange: _ref2 => {\n        let {\n          target\n        } = _ref2;\n        return setPassword(target.value);\n      },\n      handleSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map((note, i) => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LdxpMLjuvvZFcakVyUDiTyRdCJQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Note","Notification","noteService","loginService","LoginForm","NoteForm","jsxDEV","_jsxDEV","App","_s","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","getAll","then","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogout","removeItem","addNote","noteObject","create","returnedNote","concat","toggleImportanceOf","id","note","find","n","changedNote","important","update","map","catch","error","content","setTimeout","handleLogin","event","preventDefault","login","setItem","stringify","e","notesToShow","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","message","handleUsernameChange","_ref","target","value","handlePasswordChange","_ref2","handleSubmit","onClick","i","toggleImportance","_c","$RefreshReg$"],"sources":["/home/llop10101/Escriptori/Pastorets/Programes/prova-react/prova-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\nimport loginService from './services/login'\nimport LoginForm from './components/LoginForm.js'\nimport NoteForm from './components/NoteForm.js'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    setUser(null)\n    noteService.setToken(null)\n    window.localStorage.removeItem('loggedNoteAppUser')\n  }\n\n  const addNote = (noteObject) => {\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)   \n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      })\n  \n      window.localStorage.setItem(\n        'loggedNoteAppUser', JSON.stringify(user)\n      )\n\n      noteService.setToken(user.token)\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch(e) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      {\n        user\n          ? <NoteForm\n              addNote={addNote}\n              handleLogout={handleLogout}\n            />\n          : <LoginForm\n              username={username}\n              password={password}\n              handleUsernameChange={\n                ({target}) => setUsername(target.value)}\n              handlePasswordChange={\n                ({target}) => setPassword(target.value)\n              }\n              handleSubmit={handleLogin}\n            />\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>      \n      <ul>\n        {notesToShow.map((note, i) => \n          <Note\n            key={i}\n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul> \n    </div>\n  )\n}\n\nexport default App "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}