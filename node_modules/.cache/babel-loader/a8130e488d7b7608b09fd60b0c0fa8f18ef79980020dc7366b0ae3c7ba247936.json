{"ast":null,"code":"var _jsxFileName = \"/home/llop10101/Escriptori/Pastorets/Programes/prova-react/prova-react/src/components/CountDown/CountDownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = _ref => {\n  _s();\n  let {\n    targetDate\n  } = _ref;\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0\n  });\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = targetDate - now;\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      setCountdown({\n        days,\n        hours,\n        minutes\n      });\n      if (distance < 0) {\n        clearInterval(interval);\n        setCountdown({\n          days: 0,\n          hours: 0,\n          minutes: 0\n        });\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [targetDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: countdown.days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \" days\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: countdown.hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \" hours\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: countdown.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), \" minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"1+hvEq6EYQT3tvdYHscsgdGHEls=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownTimer","_ref","_s","targetDate","countdown","setCountdown","days","hours","minutes","interval","setInterval","now","Date","getTime","distance","Math","floor","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/llop10101/Escriptori/Pastorets/Programes/prova-react/prova-react/src/components/CountDown/CountDownTimer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CountdownTimer = ({ targetDate }) => {\n  const [countdown, setCountdown] = useState({ days: 0, hours: 0, minutes: 0 });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = targetDate - now;\n\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n\n      setCountdown({ days, hours, minutes });\n\n      if (distance < 0) {\n        clearInterval(interval);\n        setCountdown({ days: 0, hours: 0, minutes: 0 });\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [targetDate]);\n\n  return (\n    <div>\n      <div>\n        <span>{countdown.days}</span> days\n      </div>\n      <div>\n        <span>{countdown.hours}</span> hours\n      </div>\n      <div>\n        <span>{countdown.minutes}</span> minutes\n      </div>\n    </div>\n  );\n};\n\nexport default CountdownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAC,CAAC;EAE7EX,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAChC,MAAMC,QAAQ,GAAGX,UAAU,GAAGQ,GAAG;MAEjC,MAAML,IAAI,GAAGS,IAAI,CAACC,KAAK,CAACF,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACzD,MAAMP,KAAK,GAAGQ,IAAI,CAACC,KAAK,CAAEF,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MAC/E,MAAMN,OAAO,GAAGO,IAAI,CAACC,KAAK,CAAEF,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;MAEvET,YAAY,CAAC;QAAEC,IAAI;QAAEC,KAAK;QAAEC;MAAQ,CAAC,CAAC;MAEtC,IAAIM,QAAQ,GAAG,CAAC,EAAE;QAChBG,aAAa,CAACR,QAAQ,CAAC;QACvBJ,YAAY,CAAC;UAAEC,IAAI,EAAE,CAAC;UAAEC,KAAK,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC;MACjD;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMS,aAAa,CAACR,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAOd,SAAS,CAACE;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,SAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAOd,SAAS,CAACG;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,UAChC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAOd,SAAS,CAACI;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,YAClC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CApCIF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}